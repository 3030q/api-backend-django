# Generated by Django 3.2 on 2021-06-20 10:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='App',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('url', models.CharField(blank=True, default=None, max_length=255, null=True, unique=True)),
                ('ratings', models.FloatField(blank=True, default=None, null=True)),
                ('dev_name', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('version', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('last_modified', models.DateTimeField(blank=True, default=None, null=True)),
                ('last_update_info', models.DateTimeField(auto_now=True, null=True)),
                ('count_reviews', models.IntegerField(blank=True, default=None, null=True)),
                ('platform', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='IntegrationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'api_integration_type',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('price', models.FloatField()),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('max_app_count', models.IntegerField()),
            ],
            options={
                'db_table': 'api_subscription_type',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expired_at', models.DateTimeField()),
                ('subscription_type', models.ForeignKey(db_column='subscription_type_id', on_delete=django.db.models.deletion.CASCADE, to='api.subscriptiontype')),
                ('user', models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slack_token', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('app', models.ForeignKey(db_column='app_id', on_delete=django.db.models.deletion.CASCADE, to='api.app')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GooglePlayReviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('text', models.TextField(blank=True, default=None, null=True)),
                ('posted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('avatar_link', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('rating', models.IntegerField(blank=True, default=None, null=True)),
                ('relevance', models.IntegerField(blank=True, default=None, null=True)),
                ('app_id', models.ForeignKey(db_column='app_id', on_delete=django.db.models.deletion.CASCADE, to='api.app')),
            ],
        ),
        migrations.CreateModel(
            name='AppStoreReviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, default=None, max_length=255, null=True, unique=True)),
                ('text', models.TextField(blank=True, default=None, null=True)),
                ('rating', models.IntegerField(blank=True, default=None, null=True)),
                ('relevance', models.IntegerField(blank=True, default=None, null=True)),
                ('app_version', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('app_id', models.ForeignKey(db_column='app_id', on_delete=django.db.models.deletion.CASCADE, to='api.app')),
            ],
        ),
        migrations.CreateModel(
            name='AppGalleryReviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('text', models.TextField(blank=True, default=None, null=True)),
                ('posted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('avatar_link', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('rating', models.IntegerField(blank=True, default=None, null=True)),
                ('relevance', models.IntegerField(blank=True, default=None, null=True)),
                ('app_version', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('app_id', models.ForeignKey(db_column='app_id', on_delete=django.db.models.deletion.CASCADE, to='api.app')),
            ],
        ),
    ]
